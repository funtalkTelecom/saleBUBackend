<?xml version="1.0" encoding="UTF-8"?>
<!--设置log4j2的自身log级别为warn-->
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInterval="30">
    <Properties>
        <Property name="pattern">%-5p %d{yyyy-MM-dd HH:mm:ss,SSS} [%t] - %l - %m%n</Property>
        <property name="log_home">${sys:catalina.home}/logs</property>
        <property name="log_file_name">hk_log_</property>
    </Properties>
    <appenders><!--先定义所有的appender-->
        <console name="Console" target="SYSTEM_OUT"><!--这个输出控制台的配置-->
            <Filters><ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/></Filters><!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <PatternLayout><Pattern>${pattern}</Pattern></PatternLayout><!--输出日志的格式-->
        </console>
        <RollingFile name="rolling_file" fileName="${log_home}/${log_file_name}" filePattern="${log_home}/${log_file_name}%d{yyyy-MM-dd}.txt">
            <Filters><ThresholdFilter level="TRACE" onMatch="ACCEPT" onMismatch="DENY"/></Filters>
            <PatternLayout><Pattern>${pattern}</Pattern></PatternLayout>
            <Policies><TimeBasedTriggeringPolicy interval="1"/></Policies>
        </RollingFile>
    </appenders>
    <loggers><!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
        <logger name="org.springframework" level="INFO"></logger><!--过滤掉spring和hibernate的一些无用的debug信息-->
        <logger name="org.mybatis" level="INFO"></logger>
        <root level="all">
            <appender-ref ref="Console"/>
            <appender-ref ref="rolling_file"/>
        </root>
    </loggers>
</configuration>