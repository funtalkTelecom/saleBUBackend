<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hrtx.web.mapper.NumPriceMapper" >
  <!--<cache
          eviction="FIFO"  &lt;!&ndash;回收策略为先进先出&ndash;&gt;
  flushInterval="60000" &lt;!&ndash;自动刷新时间60s&ndash;&gt;
  size="512" &lt;!&ndash;最多缓存512个引用对-->

  <cache eviction="LRU" flushInterval="60000" readOnly="true" size="1024"></cache>

  <select id="queryList" resultType="java.util.HashMap">
    select a.numPriceId, a.resource, case when a.net_type = '电信' then 1 when a.net_type = '联通' then 2 when a.net_type = '移动' then 3 else 0 end net_type,
    a.province_name, a.city_name, a.feature, a.price, a.is_freeze,a.id, a.status, a.city_code,
    a.with4,a.teleType,a.skuTobPrice,a.skuTocPrice,a.netType,a.numLevel,a.lowConsume,a.skuId,a.tags
    from (
    SELECT  IF(@resource = b.resource, @rn := @rn + 1, @rn := 1) AS rn,
    @resource := b.resource AS resource, concat(b.id,'') numPriceId, n.status, b.city_code,
    b.net_type, b.province_name, b.city_name, b.feature,  b.price, b.agent_id,n.is_freeze,concat(n.id,'') id,
    n.with4, if(n.tele_type is null,'',n.tele_type) as teleType, sku.sku_tob_price as skuTobPrice,
    sku.sku_toc_price as skuTocPrice, n.net_type as netType,n.num_level as numLevel,n.low_consume as lowConsume,concat(n.sku_id,'') as skuId,'tag' as tags

    FROM tb_num_price b, tb_num n, tb_goods c, tb_sku sku, (select @rn := 0, @resource := null) d
    where b.num_id = n.id and n.status = 2 and b.is_del = 0 and b.sku_id = sku.sku_id
    and c.g_id = sku.g_id and c.g_is_auc = 0 and c.`status`=1
    and sku.sku_goods_type = '4'
    and c.g_is_sale = '1'
    and SYSDATE() between c.g_start_time and c.g_end_time

    <if test="param.channel!=null and param.channel > 0"> and b.channel = #{param.channel}</if>
    <if test="param.agentId!=null and param.agentId > 0"> and (b.agent_id = -1 or b.agent_id = #{param.agentId})</if>
    <if test="param.provinceCode!=null and param.provinceCode > 0"> and b.province_code = #{param.provinceCode}</if>
    <if test="param.cityCode!=null and param.cityCode > 0"> and b.city_code = #{param.cityCode}</if>
    <if test="param.netType!=null and param.netType != ''"> and b.net_type = #{param.netType}</if>
    <if test="param.feature!=null and param.feature != ''"> and b.feature REGEXP ".*,"#{param.feature}",.*"</if>
    <if test="param.temp!=null and param.temp!=''"> and b.resource like #{param.temp}</if>
    <if test="param.resource!=null and param.resource!=''"> and b.resource like "%"#{param.resource}"%"</if>
    <if test="param.numId!=null and param.numId > 0"> and b.num_id = #{param.numId}</if>

    ORDER BY b.agent_id desc ) a where a.rn = 1
    <choose>
      <when test="param.sort == 1">
        order by
        case when a.province_name = '北京市' then 1 else 0 end desc,
        a.province_name desc,
        case when a.feature REGEXP ".*,AAAA,.*" THEN 2 when a.feature REGEXP ".*,AAA,.*" then 1 ELSE 0 end desc
      </when>
      <otherwise>
        order by a.price desc
      </otherwise>
    </choose>
    <if test="param.limit!=null and param.limit > 0"> limit #{param.start}, #{param.limit} </if>

  </select>
  <select id="countList" resultType="java.lang.Long">
    select count(*) FROM tb_num_price b, tb_num n, tb_goods c, tb_sku sku
    where b.num_id = n.id and n.status = 2 and b.is_del = 0 and b.agent_id = -1 and b.sku_id = sku.sku_id
    and c.g_id = sku.g_id and c.g_is_auc = 0 and c.`status`=1
    and sku.sku_goods_type = '4'
    and c.g_is_sale = '1'
    and SYSDATE() between c.g_start_time and c.g_end_time

    <if test="param.channel!=null and param.channel > 0"> and b.channel = #{param.channel}</if>
    <if test="param.provinceCode!=null and param.provinceCode > 0"> and b.province_code = #{param.provinceCode}</if>
    <if test="param.cityCode!=null and param.cityCode > 0"> and b.city_code = #{param.cityCode}</if>
    <if test="param.netType!=null and param.netType != ''"> and b.net_type = #{param.netType}</if>
    <if test="param.feature!=null and param.feature != ''"> and b.feature REGEXP ".*,"#{param.feature}",.*"</if>
    <if test="param.temp!=null and param.temp!=''"> and b.resource like #{param.temp}</if>
    <if test="param.resource!=null and param.resource!=''"> and b.resource like "%"#{param.resource}"%"</if>
    <if test="param.numId!=null and param.numId > 0"> and b.num_id = #{param.numId}</if>

  </select>

  <update id="matchNumPrice">
    update tb_num_price t, (
    select n.id, c.ratio_price, ifnull(bp.price,n.base_price) price from tb_num_price n left join
    (
    select t.num_id, max(t.num) num, max(CAST(t.price AS SIGNED)) price from (
    select r.num_id, r.num, case when locate('4',r.num) > 0 then d.ext2 else d.ext1 end price
    from tb_num_rule r, tb_dict d where r.`value` = d.key_id and r.rule_type = 'feather_price' and d.key_group = 'feather_price' and d.is_del = 0
    ) t group by t.num_id
    ) bp on n.num_id = bp.num_id, tb_channel c where n.agent_id = -1 and n.channel = c.channel_id and c.is_del = 0 and n.is_del = 0
     and ((n.base_price != bp.price) or n.ratio_price != c.ratio_price)

    ) t1 set t.ratio_price = t1.ratio_price, t.base_price = t1.price, t.price = t1.ratio_price * t1.price where t.id = t1.id and t.is_del = 0

  </update>

  <update id="batchUpateFeature">
    update tb_num_price p set p.feature = CONCAT(p.feature,#{feature}) where p.num_id in (
    <foreach collection="batch" item="item" separator=",">
      #{item.numId}
    </foreach>
    ) and p.is_del = 0
  </update>

  <update id="updateFeature">
      update tb_num_price p set p.feature = REPLACE(p.feature,#{feature},',') where p.is_del = 0 and p.feature REGEXP  ".*"#{feature}".*";
  </update>
</mapper>