<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hrtx.web.mapper.NumMapper" >
    <select id="queryInNum" resultType="java.util.HashMap">
        select nun.id, nun.num_resource from tb_num nun where nun.`status` in (1,2,10)
        <if test="corpId!=null and corpId > 0">
            and nun.seller_id = #{corpId}
        </if>
    </select>
    <select id="queryActiveNum" resultType="java.util.HashMap">
        select b.id, b.num_resource
         from tb_num_base b, tb_third_city c
      where b.city_code = c.third_id and b.seller_id = c.corp_id and b.seller_id = #{corpId} and b.num_resource not in (select n.num_resource from tb_num n where  n.`status` not in (6,8,9) and n.seller_id = #{corpId})
    </select>
  <insert id="insertAcitveNum">
  	INSERT INTO tb_num (`id`, `city_id`, `city_name`, `net_type`, `num_resource`, `num_type`, `num_level`, `low_consume`, `with4`, `feature`, `section_no`, `more_digit`, `seller_id`, `seller`, `buyer_id`, `buyer`, `iccid`, `status`, `tele_type`)
     select b.id, c.city_id, c.city_name, b.net_type, b.num_resource, b.num_type, b.num_level, b.low_consume, case when LOCATE('4',b.num_resource) > 0 then 1 else 0 end, '', substr(b.num_resource, 1,7), '',  #{corpId}, '', 0, '', '', 1, b.net_type
     from tb_num_base b, tb_third_city c
     where b.city_code = c.third_id and b.seller_id = c.corp_id and b.seller_id = #{corpId} and b.num_resource not in (select n.num_resource from tb_num n where n.seller_id = #{corpId} and n.`status` not in (6,8,9))
  </insert>
  <update id="updateLoseNum">
        update tb_num n,(
		select n.id from tb_num n left join tb_num_base b on n.num_resource = b.num_resource and b.seller_id = #{corpId} where n.`status` in (1,2,10)
		and b.id is null and n.seller_id = #{corpId} ) t set n.`status` = 8 where n.id = t.id and n.seller_id = #{corpId}
  </update>

    <update id="updateBoundNum">
        update tb_num a
        set a.iccid_id = #{iccidId},
        a.iccid = #{iccid},
        a.meal_mid = #{mealMid},
        a.status = #{status}
        where a.id = #{id}
    </update>
    <update id="batchUpdateDpk">
        update tb_num n set n.buyer_id=#{buyerId}, n.buyer = #{buyer}, n.`status` = 4 where n.id in (
        <foreach collection ="list" item="item" separator =",">
            #{item.id}
        </foreach >
        )
    </update>
    <update id="batchUpdateSlz">
        update tb_num n set n.`status` = 11, n.upload_file_name=#{fileName} where n.id in (
        <foreach collection ="list" item="item" separator =",">
            #{item}
        </foreach >
        ) and n.`status` = 5
    </update>

    <select id="queryPageNumList" resultType="java.util.HashMap">
    select
    concat(n.id,'')as id,
    n.num_resource num,
    n.city_name as cityName,
    n.low_consume as lowConsume,
    n.net_type as netType,
    n.iccid,
    meal.meal_name as mealName
    from tb_num n
    left join tb_meal meal on meal.mid=n.meal_mid
    where n.buyer_id=#{consumerId}
    and  n.status in ( #{status})
    </select>

    <select id="queryPageNumList2" resultType="java.util.HashMap">
    select
    concat(n.id,'')as id,
    n.num_resource num,
    n.city_name as cityName,
    n.low_consume as lowConsume,
    n.net_type as netType,
    n.iccid,
    meal.meal_name as mealName
    from tb_num n
    left join tb_order_item oi on n.id=oi.num_id
    left join tb_order o on o.order_id=oi.order_id
    left join tb_meal meal on meal.mid=n.meal_mid
    where o.status=4 and o.sku_goods_type=3
    and  n.buyer_id=#{consumerId}
    and  n.status in ( #{status})
   </select>

    <select id="queryDslNum" resultType="java.util.HashMap">

    select n.id, c.third_id, n.num_resource, n.iccid, m.meal_id, o.boss_num, o.person_name, o.person_tel,oi.item_id from tb_num n, tb_third_city c, tb_meal m,
    tb_order o , tb_order_item oi where n.city_id = c.city_id and c.third = 'ly' and n.meal_mid = m.mid and n.id = oi.num_id and oi.is_shipment = 0
    and oi.order_id = o.order_id and n.seller_id = 10 and n.`status` = 5 and o.`status` in (5,6) and o.is_del=0  order by n.id limit 100000;

    </select>

    <select id="queryNumCountByskuid" resultType="java.util.HashMap">
        select count(*) count from tb_num m
        where m.sku_id=#{skuid}

        and m.`status` in (
        <foreach collection="status.split(',')" item="statuss" separator=",">
            #{statuss}
        </foreach>
        )
    </select>

    <select id="findNumFreezeList" resultType="java.util.HashMap">
        select max(nf.add_Date),n.id
        from tb_num n left join tb_num_freeze nf on n.id=nf.num_id
        where n.is_freeze=1
        group by n.id
        having TIMESTAMPDIFF(MINUTE,max(nf.add_Date), now()) >30;
    </select>

    <select id="findThirdOrder" resultType="java.lang.String">
        select o.third_order from tb_num n, tb_order o, tb_order_item oi
        where n.id = oi.num_id and oi.order_id = o.order_id and n.iccid = #{iccid} and n.num_resource = #{num} and n.`status` = #{status}
    </select>

</mapper>