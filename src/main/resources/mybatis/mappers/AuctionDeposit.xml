<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrtx.web.mapper.AuctionDepositMapper">
     <select id="findAuctionDepositSumEPSaleGoodsByNumId" resultType="java.util.HashMap">
      select count(tb_auction.id) as priceCount,
	  max(tb_auction.price) as  currentPrice,
	  tb_auction.num_id as numId
	  from tb_auction
	  where  tb_auction.status=2 and tb_auction.num_id = #{numId}
	  group by tb_auction.num_id
    </select>


	<select id="findAuctionDepositById" resultType="java.util.HashMap">
	  select * from 	tb_auction_deposit
	  where  tb_auction_deposit.id = #{Id}
    </select>

	<select id="findAuctionDepositListByNumId" resultType="java.util.HashMap">
	  select * from 	tb_auction_deposit
	  where status=2 and
	  tb_auction_deposit.num_id = #{numId}
    </select>

	<select id="findAuctionDepositListByNumIdAndConsumerIdAndStatus" resultType="java.util.HashMap">
	  select * from 	tb_auction_deposit
	  where tb_auction_deposit.num_id = #{numId}
	  and tb_auction_deposit.consumer_id=#{consumerId}
	  and tb_auction_deposit.status=#{status}
    </select>

	<select id="findAuctionDepositListByNumIdAndConsumerIdAndStatusAndGId" resultType="java.util.HashMap">
	  select * from 	tb_auction_deposit
	  where tb_auction_deposit.num_id = #{numId}
	  and tb_auction_deposit.consumer_id=#{consumerId}
	  and tb_auction_deposit.status=#{status}
	  and tb_auction_deposit.g_id=#{gId}
    </select>

	<select id="findAuctionDepositListByNumIdAndConsumerId" resultType="java.util.HashMap">
	  select * from 	tb_auction_deposit
	  where  tb_auction_deposit.num_id = #{numId}
	       and tb_auction_deposit.consumer_id=#{consumerId}
    </select>

	<select id="findAuctionDepositListByConsumerId" resultType="java.util.HashMap">
	select
 	id,
 	num,
 	num_id as numId,
 	g_id as gId,
 	status,
 	pay_date as payDate,
 	amt as price,
 	refund_date as refundDate
	from tb_auction_deposit
	where tb_auction_deposit.consumer_id=#{consumerId}
	order by tb_auction_deposit.add_date desc;
    </select>

	<select id="queryPageDepositListByConsumerId" resultType="java.util.HashMap">
	select
 	concat(id,'') as id,
 	num,
 	concat(num_id,'') as numId,
 	case when g_id is null then '' else  concat(g_id,'') end as gId,
 	status,
 	case when pay_date is null then '' else pay_date end as payDate,
 	amt as price,
 	case when refund_date is null then '' else refund_date end as refundDate
	from tb_auction_deposit
	where tb_auction_deposit.status in(2,3)
	and tb_auction_deposit.consumer_id=#{consumerId}
	order by tb_auction_deposit.add_date desc
    </select>

	<select id="findAuctionDepositListByNumIdAndConsumerIdAndGId" resultType="java.util.HashMap">
	  select * from 	tb_auction_deposit
	  where  tb_auction_deposit.num_id = #{numId}
	       and tb_auction_deposit.consumer_id=#{consumerId}
	       and tb_auction_deposit.g_id=#{gId}
    </select>

	<insert id="insertBatch">
		insert into tb_auction_deposit(
		id,
		sku_id,
		num_id,
		num,
		g_id,
		amt,
		status,
		add_date,
		consumer_id,
		add_ip,
		pay_snn,
		pay_date,
		refund_amt,
		refund_snn,
		refund_date
		) values
		<foreach collection="auctionDepositList" item="AuctionDeposit" separator=",">
			(
			#{AuctionDeposit.id},
			#{AuctionDeposit.skuId},
			#{AuctionDeposit.numId},
			#{AuctionDeposit.num},
			#{AuctionDeposit.gId},
			#{AuctionDeposit.amt},
			#{AuctionDeposit.status},
			#{AuctionDeposit.addDate},
			#{AuctionDeposit.consumerId},
			#{AuctionDeposit.addIp},
			#{AuctionDeposit.paySnn},
			#{AuctionDeposit.payDate},
			#{AuctionDeposit.refundAmt},
			#{AuctionDeposit.refundSnn},
			#{AuctionDeposit.refundDate}
			)
		</foreach>
	</insert>

	<update id="auctionDepositEdit">
        update tb_auction_deposit t set
         t.status=#{status}
        where
         t.num_id= #{numId}
         and t.consumer_id= #{consumerId}
    </update>

	<update id="auctionDepositSatusEdit">
        update tb_auction_deposit t set
         t.status=#{status},
         t.pay_date=#{payDate}
        where
         t.id= #{id}
    </update>
</mapper>