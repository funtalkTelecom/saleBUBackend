<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hrtx.web.mapper.NumPriceAgentMapper" >
    <select id="queryNumPriceAgentSkus" resultType="java.lang.Integer">
        select n.sku_id from tb_num_price_agent n group by n.sku_id
    </select>
    <select id="queryGoodSkus" resultType="java.lang.Integer">
        select sku.sku_id from tb_goods c join tb_sku sku on c.g_id=sku.g_id
        where SYSDATE( ) BETWEEN c.g_start_time AND c.g_end_time and c.`status` = 1 AND c.g_is_auc = 0 AND sku.sku_goods_type = '4' AND c.g_is_sale = '1'
    </select>

    <insert id="insertNumPriceAgent">
        INSERT INTO `tb_num_price_agent`(`num_price_id`, `sku_id`, `num_id`, `province_code`, `province_name`, `city_code`, `city_name`, `resource`, `base_price`, `net_type`, `feature`, `low_consume`, `corp_id`, `channel`, `ratio_price`, `price`, `agent`, `agent_id`, `add_date`,`status`,with4,is_freeze,num_level,sku_toc_price,sku_tob_price,num_tags,exc_price)
        select np.`id`, np.`sku_id`, np.`num_id`, np.`province_code`, np.`province_name`, np.`city_code`, np.`city_name`, np.`resource`, np.`base_price`, np.`net_type`, np.`feature`, np.`low_consume`, np.`corp_id`, np.`channel`, np.`ratio_price`, np.`price`, a.commpay_name, a.id agent_id,now(),n.`status`,n.with4,n.is_freeze,n.num_level,sku.sku_toc_price,sku.sku_tob_price,tags.num_tags, 0
        from tb_num_price np ,tb_agent a ,tb_num n left join (select nr.num_id,group_concat(d.key_value) num_tags from tb_num_rule nr , tb_dict d where nr.`value`=d.key_id and d.key_group='num_tags' and nr.rule_type='tag' group by nr.num_id) tags on tags.num_id=n.id, tb_goods c, tb_sku sku
        WHERE  np.num_id = n.id AND np.sku_id = sku.sku_id  and a.channel_id=np.channel AND n.STATUS = 2  and np.is_del=0 and np.agent_id=-1
        AND c.g_id = sku.g_id AND sku.sku_goods_type = '4' AND c.g_is_sale = '1'  AND SYSDATE( ) BETWEEN c.g_start_time AND c.g_end_time  AND c.g_is_auc = 0 AND c.`status` = 1
        and sku.sku_id in (
        <foreach collection="skus" item="sku_id" separator=",">
            #{sku_id}
        </foreach>
        )
    </insert>
    <delete id="deleteNumPriceAgent">
        delete npa from tb_num_price_agent npa where npa.sku_id in (
        <foreach collection="skus" item="sku_id" separator=",">
            #{sku_id}
        </foreach>
        )
    </delete>
    <delete id="deleteCompleteNumPriceAgent">
        delete npa from tb_num_price_agent npa, tb_num n where npa.num_id = n.id and n.`status` in (6,8,9)
    </delete>

    <update id="updateNumPriceAgentStatus">
        /*更新号码状态*/
        update tb_num_price_agent npa join tb_num n on npa.num_id=n.id
        set npa.status=n.status,npa.is_freeze=n.is_freeze where npa.status!=n.status or npa.is_freeze!=n.is_freeze;
    </update>

    <update id="updateNumPriceAgentBasePrice">
        update tb_num_price_agent npa , tb_num_price np set npa.price=np.price
        where npa.exc_price=0 and np.agent_id=-1 and npa.price!=np.price and np.is_del=0 and npa.num_price_id = np.id
    </update>
    <update id="updateNumPriceAgentAgentPrice">
        update tb_num_price_agent npa , tb_num_price np  set npa.price=np.price,npa.exc_price=1
        where np.agent_id!=-1 and npa.price!=np.price and np.is_del=0  and npa.num_price_id = np.id
    </update>
</mapper>